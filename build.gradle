group 'org.onedrive'
version '0.9-beta'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.google.osdetector'


compileJava {
	sourceCompatibility = 1.7
	targetCompatibility = 1.7
}

compileTestJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
}

repositories {
	mavenCentral()
}

buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath 'com.google.gradle:osdetector-gradle-plugin:1.+'
	}
}
dependencies {
	compile 'com.fasterxml.jackson.core:jackson-annotations:+'
	compile 'com.fasterxml.jackson.core:jackson-core:+'
	compile 'com.fasterxml.jackson.core:jackson-databind:+'

	compile 'com.fasterxml.jackson.module:jackson-module-afterburner:+'

	compile 'io.netty:netty-buffer:4.+'
	compile 'io.netty:netty-codec:4.+'
	compile 'io.netty:netty-codec-http:4.+'
	compile 'io.netty:netty-common:4.+'
	compile 'io.netty:netty-handler:4.+'
	compile 'io.netty:netty-resolver:4.+'
	compile 'io.netty:netty-transport:4.+'


	if (osdetector.os == 'linux' || osdetector.os == 'osx' || osdetector.os.endsWith('bsd')) {
		compile "io.netty:netty-transport-native-epoll:4.+:${osdetector.classifier}"
	}


	compile 'org.projectlombok:lombok:+'

	compile 'org.jetbrains:annotations:+'

	testCompileOnly('org.apiguardian:apiguardian-api:+')
	testCompile('org.junit.jupiter:junit-jupiter-api:5.+')
	testRuntime('org.junit.jupiter:junit-jupiter-engine:5.+')
}

allprojects {
	gradle.projectsEvaluated {
		tasks.withType(JavaCompile) {
			options.compilerArgs << '-Xlint'
		}
	}
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

artifacts {
	archives jar

	archives sourcesJar
	archives javadocJar
}
